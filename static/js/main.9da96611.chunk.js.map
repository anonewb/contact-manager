{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","About","NotFound","Test","console","log","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9da96611.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// in rfc, props are stored inside {props}\r\nconst Header = props => {\r\n  // pull out \"branding\" from \"props\"\r\n  // destructuring\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n// using Context API for managing state\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //   axios\r\n  //     .get(\"https://jsonplaceholder.typicode.com/users\")\r\n  //     .then(res => this.setState({ contacts: res.data }));\r\n  // }\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  // for custom methods inside compo use arrow functions\r\n  // onShowClick = e => {\r\n  // console.log(e);\r\n  // states are immutable. therefore any changes need to be done in state object, use this.setState() and not this.state()\r\n  // this.setState({\r\n  //   showContactInfo: !this.state.showContactInfo\r\n  // })\r\n  // }\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    // console.log('delete contact btn clicked!')\r\n\r\n    // 1st making a fake delete request, then deleting from DOM using dispatch()\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // pull out \"name, email, phone\" from \"this.props\"\r\n    // destructuring\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\n// in rcc, props are stored inside {this.props}\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      // value is available here bcoz of the Context API. Value object is stored inside consumer\r\n      <Consumer>\r\n        {value => {\r\n          // destructuring value obj\r\n          const { contacts } = value;\r\n          return (\r\n            // use React.Fragment when we want to return multiple components and no extra wrapper div is used for anying styling.\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n// import uuid from \"uuid\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      // id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    // Clear State onces form is submitted\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\" // comming as a prop\r\n                    value={name} // comming from state\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    // Clear State onces form is submitted\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\" //comming as a prop\r\n                    value={name} // comming from state\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist! :(</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"ComponentDidMount...\");\r\n    fetch(\"https://jsonplaceholder.typicode.com/users/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          name: data.name,\r\n          email: data.email,\r\n          phone: data.phone\r\n        })\r\n      );\r\n  }\r\n\r\n  // Discouraged to use this method\r\n  // componentWillMount() {\r\n  //   console.log(\"ComponentWillMount...\");\r\n  // }\r\n\r\n  // instead use this method or prefix \"UNSAFE_\"\r\n  // static getDerivedStateFromProps(nextProps, prevState) {\r\n  //   console.log(\"getDerivedStateFromProps...\");\r\n  //   return {\r\n  //     test:\r\n  //       \"this is how state is changed and we dont use this.setState() in this lifecycle method\"\r\n  //   };\r\n  // }\r\n\r\n  // instead use this method or prefix \"UNSAFE_\"\r\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n  //   console.log(\"getSnapshotBeforeUpdate...\");\r\n  // }\r\n\r\n  // componentDidUpdate() {\r\n  //   // runs when state is changed\r\n  // }\r\n\r\n  render() {\r\n    const { name, email, phone } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Test component for Lifecycle methods</h1>\r\n        <p>{name}</p>\r\n        <p>{email}</p>\r\n        <p>{phone}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            {/* branding is passed as props for Header compo */}\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.register();\n"],"sourceRoot":""}